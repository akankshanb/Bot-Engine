---
- hosts: localhost
  gather_facts: no
  vars:
      instance_type: t2.micro
      image: ami-0d5d9d301c853a04a
      region: us-east-2
      keypair: plotbot-key
      subnet: subnet-92d08ce8
      sg_group: sg-0c097f91462118199
  vars_files:
    - plotbot_vault.yaml
  tasks:
    - name: Install EC2 dependencies
      pip:
        name: ['boto', 'boto3', 'botocore']

    - name: Check that the {{keypair}}.pem exists
      stat:
        path: "~/.aws/{{keypair}}.pem"
      register: key_exists

    - name: create a new ec2 key pair, returns generated private key
      ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "{{keypair}}"
        region: "{{region}}"
      register: ec2_priv
      when: key_exists.stat.exists == False
    
    - local_action: copy content={{ ec2_priv.key.private_key }} dest=~/.aws/{{keypair}}.pem
      when: key_exists.stat.exists == False

    - name: Change permission of key file
      file:
        path: ~/.aws/{{keypair}}.pem
        mode: '400'
    - debug:
        msg: "{{ec2_priv}}"
    - name: Launch the new EC2 Instance
      ec2_instance:
        name: plotbot_test2
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        instance_type: "{{instance_type}}"
        image_id: "{{image}}"
        wait: yes 
        region: "{{region}}"
        key_name: "{{keypair}}"
        vpc_subnet_id: "{{subnet}}"
        security_group: "{{sg_group}}"
        network:
          assign_public_ip: true
      register: ec2

    - name: Add the newly created host
      add_host:
        name: "{{ ec2.instances[0].public_ip_address }}"
        groups: Botserver
        ansible_ssh_private_key_file: "~/.aws/{{keypair}}.pem"
    
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ ec2.instances[0].public_ip_address }}"
        port: 22
        state: started

- hosts: Botserver
  remote_user: ubuntu
  become: yes
  gather_facts: no
  vars_files:
    - plotbot_vault.yaml

  pre_tasks:
    - name: 'update apt'
      raw: sudo apt-get update
      state: present
      
    - name: 'install python2'
      raw: sudo apt-get -y install python
      state: present

  tasks:
    - name: Install python3
      apt:
        name: ['python3', 'python3-pip']
        state: present

    - name: Install plotbot packages
      pip:
        name: ['flask', 'mattermostdriver','matplotlib','pandas','seaborn','nltk','scikit-learn','PyYAML','mockito']
        executable: pip3
        state: latest

    - name: Install node.js, npm and git
      apt: 
        name: ['nodejs', 'npm', 'git']
        state: present
    - name: Install forever using npm
      npm:
        name: 'forever'
        state: present
        global: yes

    - name: Copy plotbot folder
      copy: 
        src: ../plotbot
        dest: ~/CSC510-22
      register: copied
    - debug:
        msg: "{{copied}}"
    - name: Check list of forever apps running
      command: forever list
      register: forever_list
      changed_when: false

    - name: Start plotbot application using forever
      shell: |
        cd ~/CSC510-22/plotbot
        export PLOT_BOT_TOKEN={{ PLOT_BOT_TOKEN }}
        forever start -l plotbot.log -c python3 bot-engine.py 
        echo $PLOT_BOT_TOKEN
      when: "forever_list.stdout.find('bot-engine.py') == -1"
      register: my_out

    - debug:
        msg: "{{my_out}}"

    

